import os
from pathlib import Path

import requests
from aiogram.dispatcher.filters import Text
from dotenv import load_dotenv

from aiogram import Bot, Dispatcher, types, executor

CONFIG_DIR = Path(__file__).resolve().parent.parent
load_dotenv(os.path.abspath(CONFIG_DIR / 'config' / '.env'))
BOT_TOKEN = os.getenv('BOTTOKEN')

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

DESC_COMMAND="""
<b>/start</b> - <em>–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞</em>
<b>–£–∑–Ω–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</b> - <em>–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Å –º–∞–≥–∞–∑–∏–Ω–∞ papayagame</em>"""


@dp.message_handler(commands="start")
async def start_command(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["/start", "/description", "–£–∑–Ω–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞"]
    keyboard.add(*buttons)
    await message.answer("<em>–ü—Ä–∏–≤–µ—Ç, <b>–ø–∞–ø–∞—ë–Ω–æ–∫</b></em> ü•≠", reply_markup=keyboard, parse_mode="HTML")
    await message.delete()


@dp.message_handler(commands="description")
async def desc_command(message: types.Message):
    await message.answer("ü´° –Ø –∑–Ω–∞—é —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã: \n" + DESC_COMMAND + "\n ...–∞ —Ç–∞–∫–∂–µ, –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ", parse_mode='HTML')
    await message.delete()


@dp.message_handler(Text(equals='–£–∑–Ω–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'))
async def categories_command(message: types.Message):
    result = requests.get('http://127.0.0.1:8000/api/category-list/')
    reply = "–í–æ—Ç —Å–º–æ—Ç—Ä–∏: \n"
    for i in result.json():
        reply += str('-' + i["category"] + '\n')
    await message.reply(reply)


@dp.message_handler(Text(equals='–ù–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä'))
async def echo(message: types.Message):
    await message.reply('–ú–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä: \n <b>1.</b><em>–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–≥—Ä—ã –∏–ª–∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —Å–∏–º–≤–æ–ª–æ–≤</em> \n '
                        '<b>2.</b><em>–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</em> \n <b>3.</b><em>–ü–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º</em>', parse_mode='HTML')

@dp.message_handler()
async def echo(message: types.Message):
    text = "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —á—Ç–æ —Ç—ã –º–Ω–µ –ø–∏—à–µ—à—å, —á–µ–ª–æ–≤–µ–∫"
    await bot.send_message(message.from_user.id, text)

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
