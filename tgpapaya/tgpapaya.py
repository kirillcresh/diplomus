import os
from pathlib import Path

import requests
from aiogram.dispatcher.filters import Text
from dotenv import load_dotenv

from aiogram import Bot, Dispatcher, types, executor

CONFIG_DIR = Path(__file__).resolve().parent.parent
load_dotenv(os.path.abspath(CONFIG_DIR / 'config' / '.env'))
BOT_TOKEN = os.getenv('BOTTOKEN')

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

DESC_COMMAND="""
<b>/start</b> - <em>–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞;</em>
<b>–£–∑–Ω–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</b> - <em>–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Å –º–∞–≥–∞–∑–∏–Ω–∞ papayagame</em>
<b>–ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–æ–≤–æ—Å—Ç—å –º–∞–≥–∞–∑–∏–Ω–∞</b> - <em>–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å –Ω–∞ —Å–∞–π—Ç–µ papayagame</em>
<b>–ù–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä</b> - <em>–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–∞ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ papayagame</em>"""


def get_buttons(buttons: list):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*buttons)
    return keyboard


@dp.message_handler(commands="start")
async def start_command(message: types.Message):
    keyboard = get_buttons(["/start", "/description", "–£–∑–Ω–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞", "–ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–æ–≤–æ—Å—Ç—å –º–∞–≥–∞–∑–∏–Ω–∞",
                            "–ù–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä"])
    await message.answer("<em>–ü—Ä–∏–≤–µ—Ç</em>, <b>–ø–∞–ø–∞—ë–Ω–æ–∫</b> ü•≠", reply_markup=keyboard, parse_mode="HTML")
    await message.delete()


@dp.message_handler(commands="description")
async def desc_command(message: types.Message):
    await message.answer("ü´° –Ø –∑–Ω–∞—é —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:"
                         " \n" + DESC_COMMAND + "\n ... –∞ —Ç–∞–∫–∂–µ, –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ, –∂–¥–∏—Ç–µ –º–æ–µ–≥–æ –Ω–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è."
                        "–ü–æ–∫–∞ –≤–æ—Ç –≤–∞–º –∫–æ—Ç–∏–∫: ", parse_mode='HTML')
    await bot.send_sticker(message.from_user.id,
                           sticker='CAACAgIAAxkBAAEI5RlkWBFnPNZ_sHdS1ynt0yAy85G0jAACBAADnmyTLl0puI2aiCV1LwQ')
    await message.delete()


@dp.message_handler(Text(equals='–£–∑–Ω–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞'))
async def categories_command(message: types.Message):
    result = requests.get('http://127.0.0.1:8000/api/category-list/')
    reply = "–í–æ—Ç —Å–º–æ—Ç—Ä–∏: \n"
    for i in result.json():
        reply += str('-' + '<u>' + i["category"] + '</u>' + '\n')
    await message.reply(reply, parse_mode='HTML')


@dp.message_handler(Text(equals='–ù–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä'))
async def find_goods(message: types.Message):
    keyboard = get_buttons(['1.–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', '2.–ü–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º'])
    await message.reply('–ú–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä: \n '
                        '<b>1.</b><em>–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</em> \n '
                        '<b>2.</b><em>–ü–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º (–ö–æ–ª-–≤–æ –∏–≥—Ä–æ–∫–æ–≤, –≤—Ä–µ–º—è –∏–≥—Ä—ã –∏ —Ç.–ø.)</em>'
                        "<b>–ü–æ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —Å–∏–º–≤–æ–ª–æ–≤</b><em>–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –∏–ª–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ, "
                        "–∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å—Å—è –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∏–≥—Ä—ã</em>",  parse_mode='HTML', reply_markup=keyboard)


@dp.message_handler(Text(equals="–ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–æ–≤–æ—Å—Ç—å –º–∞–≥–∞–∑–∏–Ω–∞"))
async def last_news(message: types.Message):
    try:
        result = requests.get('http://127.0.0.1:8000/api/last-news/')
        reply = "–ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–æ–≤–æ—Å—Ç—å: \n"
        reply += str('<b>'+result.json()["title"] + '</b>' + '\n')
        reply += str(result.json()["news"] + '\n')
        reply += str("–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:" + str(result.json()["pub_date"]) + '\n')
        await message.reply(reply, parse_mode='HTML')
    except Exception:
        await message.reply(text='–ü–æ–∫–∞ –Ω–∞ —Å–∞–π—Ç–µ –Ω–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π, –Ω–æ –æ—á–µ–Ω—å —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è –∏ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ, –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏!')


@dp.message_handler()
async def try_search(message: types.Message):
    try:
        result = requests.get(f'http://127.0.0.1:8000/api/game-by-name/?games_search={message.text}')
        reply = "–í–æ—Ç —á—Ç–æ —è –Ω–∞—à–µ–ª: \n"
        reply += str('<i>' + result.json()["title"] + '</i>' + '\n')
        reply += str(result.json()["games"] + '\n')
        # reply += str('<b>' + result.json()["price"] + '</b>' + '\n')
        reply += str('<em' + '–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç–æ, —á—Ç–æ –≤—ã –∏—Å–∫–∞–ª–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –∑–∞–Ω–æ–≤–æ, —É–∂–µ —Å —É—á–µ—Ç–æ–º '
                             '–¥–∞–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç —Å—É–∑–∏—Ç—å –∫—Ä—É–≥, '
                             '–ª–∏–±–æ –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ \n' + '</em>')
        await message.reply(reply, parse_mode='HTML')
    except Exception:
        await echo(message)


# @dp.message_handler()
# async def try_search(message: types.Message):
#     try:
#         result = requests.get(f'http://127.0.0.1:8000/api/game-by-name/?games_search={message.text}')


async def echo(message: types.Message):
    text = "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —á—Ç–æ —Ç—ã –º–Ω–µ –ø–∏—à–µ—à—å, —á–µ–ª–æ–≤–µ–∫ ü´£"
    await bot.send_message(message.from_user.id, text)


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
